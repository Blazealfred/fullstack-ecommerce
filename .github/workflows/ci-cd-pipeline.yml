name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  AWS_REGION: us-east-1
  FRONTEND_ECR: 422657065666.dkr.ecr.us-east-1.amazonaws.com/frontend
  BACKEND_ECR: 422657065666.dkr.ecr.us-east-1.amazonaws.com/backend

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Frontend Docker Image
        run: |
          docker build -t ecommerce-frontend:latest ./frontend
          docker images

      - name: Build Backend Docker Image
        run: |
          docker build -t ecommerce-backend:latest ./backend
          docker images

  push_to_ecr:
    runs-on: ubuntu-latest
    needs: build_and_test
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Authenticate Docker to AWS ECR
        run: |
          aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $FRONTEND_ECR
          aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $BACKEND_ECR

      - name: List Docker Images (Debugging Step)
        run: docker images

      - name: Tag and Push Frontend Docker Image
        run: |
          docker tag ecommerce-frontend:latest $FRONTEND_ECR:latest
          docker push $FRONTEND_ECR:latest

      - name: Tag and Push Backend Docker Image
        run: |
          docker tag ecommerce-backend:latest $BACKEND_ECR:latest
          docker push $BACKEND_ECR:latest

  deploy:
    runs-on: ubuntu-latest
    needs: push_to_ecr
    steps:
      - name: Deploy to AWS EC2 using Terraform
        run: |
          terraform init
          terraform apply -auto-approve
